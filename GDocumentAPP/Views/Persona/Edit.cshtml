@model PERSONA

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Persona</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PERSONA_ID)

        <div class="form-group">
            @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRIMER_APELLIDO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRIMER_APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRIMER_APELLIDO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SEGUNDO_APELLIDO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SEGUNDO_APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SEGUNDO_APELLIDO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TIPO_IDENTIFICACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listaTipoIdent = new List<SelectListItem>();

                    SelectListItem cedula = new SelectListItem() { Text = "Cédula", Value = "C" };
                    SelectListItem pasaporte = new SelectListItem() { Text = "Pasaporte", Value = "P" };
                    listaTipoIdent.Add(cedula);
                    listaTipoIdent.Add(pasaporte);

                }

                @Html.DropDownListFor(model => model.TIPO_IDENTIFICACION, listaTipoIdent, new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.TIPO_IDENTIFICACION, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IDENTIFICACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDENTIFICACION, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDENTIFICACION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SEXO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.SEXO, "M")  Masculino
                </label>
            </div>
            <div class="col-md-2">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.SEXO, "F")  Femenino
                </label>
                @Html.ValidationMessageFor(model => model.SEXO, "", new { @class = "text-danger" })

            </div>
       </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary active" />
                @Html.ActionLink("Volver al Listado", "Index", null, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
